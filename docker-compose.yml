version: "3.5"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - zookeeper_kafka_schema_registry

  kafka:
    image: confluentinc/cp-kafka:7.2.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAKFA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      #KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      #KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      #KAFKA_JMX_PORT: 9101
      #KAFKA_JMX_HOSTNAME: localhost
      #KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      #CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      #CONFLUENT_METRICS_ENABLE: "true"
      #CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
    networks:
      - zookeeper_kafka_schema_registry

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
      - "48081:48081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:29092"
      #SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - zookeeper_kafka_schema_registry

  kafka-create-topics:
    image: confluentinc/cp-kafka:7.2.0
    depends_on:
      - kafka
    hostname: kafka-create-topics
    container_name: kafka-create-topics

    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka:29092 1 20 && \
      kafka-topics --create --bootstrap-server kafka:29092 --replication-factor 1 --partitions 1 -- topic obu-events || true && \
      kafka-topics --create --bootstrap-server kafka:29092 --replication-factor 1 --partitions 1 -- topic sample-compacted-topic-events --config cleanup.policy=compact --config max.compaction.log.ms=86400000 || true && \
      sleep infinity'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    networks:
      - zookeeper_kafka_schema_registry

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8083:8080
    depends_on:
      - kafka
      - schema-registry
    networks:
      - zookeeper_kafka_schema_registry
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9097
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED: "true"
      KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDIT_ENABLED: "true"

networks:
  zookeeper_kafka_schema_registry:
    name: zookeeper_kafka_schema_registry
    driver: bridge
